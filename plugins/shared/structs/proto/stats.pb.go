// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/shared/structs/proto/stats.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// StatObject is a collection of statistics either exposed at the top
// level or via nested StatObjects.
type StatObject struct {
	// nested is a mapping of object name to a nested stats object.
	Nested map[string]*StatObject `protobuf:"bytes,1,rep,name=nested,proto3" json:"nested,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// attributes is a mapping of statistic name to its value.
	Attributes           map[string]*StatValue `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StatObject) Reset()         { *m = StatObject{} }
func (m *StatObject) String() string { return proto.CompactTextString(m) }
func (*StatObject) ProtoMessage()    {}
func (*StatObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_f326973aadc74e22, []int{0}
}
func (m *StatObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatObject.Unmarshal(m, b)
}
func (m *StatObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatObject.Marshal(b, m, deterministic)
}
func (dst *StatObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatObject.Merge(dst, src)
}
func (m *StatObject) XXX_Size() int {
	return xxx_messageInfo_StatObject.Size(m)
}
func (m *StatObject) XXX_DiscardUnknown() {
	xxx_messageInfo_StatObject.DiscardUnknown(m)
}

var xxx_messageInfo_StatObject proto.InternalMessageInfo

func (m *StatObject) GetNested() map[string]*StatObject {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *StatObject) GetAttributes() map[string]*StatValue {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// StatValue exposes the values of a particular statistic. The value may
// be of type double, integer, string or boolean. Numeric types can be
// exposed as a single value or as a fraction.
type StatValue struct {
	// float_numerator_val exposes a floating point value. If denominator
	// is set it is assumed to be a fractional value, otherwise it is a
	// scalar.
	FloatNumeratorVal   float64 `protobuf:"fixed64,1,opt,name=float_numerator_val,json=floatNumeratorVal,proto3" json:"float_numerator_val,omitempty"`
	FloatDenominatorVal float64 `protobuf:"fixed64,2,opt,name=float_denominator_val,json=floatDenominatorVal,proto3" json:"float_denominator_val,omitempty"`
	// int_numerator_val exposes a int value. If denominator
	// is set it is assumed to be a fractional value, otherwise it is a
	// scalar.
	IntNumeratorVal   int64 `protobuf:"varint,3,opt,name=int_numerator_val,json=intNumeratorVal,proto3" json:"int_numerator_val,omitempty"`
	IntDenominatorVal int64 `protobuf:"varint,4,opt,name=int_denominator_val,json=intDenominatorVal,proto3" json:"int_denominator_val,omitempty"`
	// string_val exposes a string value. These are likely annotations.
	StringVal string `protobuf:"bytes,5,opt,name=string_val,json=stringVal,proto3" json:"string_val,omitempty"`
	// bool_val exposes a boolean statistic.
	BoolVal bool `protobuf:"varint,6,opt,name=bool_val,json=boolVal,proto3" json:"bool_val,omitempty"`
	// unit gives the unit type: Â°F, %, MHz, MB, etc.
	Unit string `protobuf:"bytes,7,opt,name=unit,proto3" json:"unit,omitempty"`
	// desc provides a human readable description of the statistic.
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatValue) Reset()         { *m = StatValue{} }
func (m *StatValue) String() string { return proto.CompactTextString(m) }
func (*StatValue) ProtoMessage()    {}
func (*StatValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_f326973aadc74e22, []int{1}
}
func (m *StatValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatValue.Unmarshal(m, b)
}
func (m *StatValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatValue.Marshal(b, m, deterministic)
}
func (dst *StatValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatValue.Merge(dst, src)
}
func (m *StatValue) XXX_Size() int {
	return xxx_messageInfo_StatValue.Size(m)
}
func (m *StatValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StatValue.DiscardUnknown(m)
}

var xxx_messageInfo_StatValue proto.InternalMessageInfo

func (m *StatValue) GetFloatNumeratorVal() float64 {
	if m != nil {
		return m.FloatNumeratorVal
	}
	return 0
}

func (m *StatValue) GetFloatDenominatorVal() float64 {
	if m != nil {
		return m.FloatDenominatorVal
	}
	return 0
}

func (m *StatValue) GetIntNumeratorVal() int64 {
	if m != nil {
		return m.IntNumeratorVal
	}
	return 0
}

func (m *StatValue) GetIntDenominatorVal() int64 {
	if m != nil {
		return m.IntDenominatorVal
	}
	return 0
}

func (m *StatValue) GetStringVal() string {
	if m != nil {
		return m.StringVal
	}
	return ""
}

func (m *StatValue) GetBoolVal() bool {
	if m != nil {
		return m.BoolVal
	}
	return false
}

func (m *StatValue) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *StatValue) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*StatObject)(nil), "hashicorp.nomad.plugins.shared.structs.StatObject")
	proto.RegisterMapType((map[string]*StatValue)(nil), "hashicorp.nomad.plugins.shared.structs.StatObject.AttributesEntry")
	proto.RegisterMapType((map[string]*StatObject)(nil), "hashicorp.nomad.plugins.shared.structs.StatObject.NestedEntry")
	proto.RegisterType((*StatValue)(nil), "hashicorp.nomad.plugins.shared.structs.StatValue")
}

func init() {
	proto.RegisterFile("plugins/shared/structs/proto/stats.proto", fileDescriptor_stats_f326973aadc74e22)
}

var fileDescriptor_stats_f326973aadc74e22 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0x8b, 0xd4, 0x30,
	0x18, 0xc6, 0x49, 0xbb, 0xf3, 0xef, 0x9d, 0xc3, 0xba, 0x59, 0x84, 0xba, 0x20, 0x94, 0x3d, 0x48,
	0xf1, 0x90, 0x62, 0xbd, 0x88, 0x07, 0xc1, 0x45, 0xd1, 0xd3, 0x08, 0x15, 0xe6, 0xe0, 0x65, 0x48,
	0xdb, 0x38, 0x13, 0x6d, 0x93, 0x92, 0xbc, 0x1d, 0x98, 0x8f, 0xe4, 0xc1, 0xef, 0x28, 0x49, 0xc7,
	0xf9, 0x53, 0x3c, 0x38, 0x7b, 0xea, 0xdb, 0xf7, 0x79, 0x9e, 0xdf, 0x13, 0x02, 0x81, 0xa4, 0xad,
	0xbb, 0xb5, 0x54, 0x36, 0xb5, 0x1b, 0x6e, 0x44, 0x95, 0x5a, 0x34, 0x5d, 0x89, 0x36, 0x6d, 0x8d,
	0x46, 0x9d, 0x5a, 0xe4, 0x68, 0x99, 0x9f, 0xe9, 0x8b, 0x0d, 0xb7, 0x1b, 0x59, 0x6a, 0xd3, 0x32,
	0xa5, 0x1b, 0x5e, 0xb1, 0x7d, 0x92, 0xf5, 0x49, 0xb6, 0x4f, 0xde, 0xff, 0x0a, 0x01, 0xbe, 0x22,
	0xc7, 0x2f, 0xc5, 0x0f, 0x51, 0x22, 0x5d, 0xc2, 0x58, 0x09, 0x8b, 0xa2, 0x8a, 0x48, 0x1c, 0x26,
	0xf3, 0xec, 0x1d, 0xfb, 0x3f, 0x0e, 0x3b, 0x32, 0xd8, 0xc2, 0x03, 0x3e, 0x2a, 0x34, 0xbb, 0x7c,
	0x4f, 0xa3, 0x05, 0x00, 0x47, 0x34, 0xb2, 0xe8, 0x50, 0xd8, 0x28, 0xf0, 0xec, 0x87, 0x47, 0xb0,
	0xdf, 0x1f, 0x20, 0x3d, 0xff, 0x84, 0x7a, 0xd7, 0xc0, 0xfc, 0xa4, 0x9a, 0x3e, 0x81, 0xf0, 0xa7,
	0xd8, 0x45, 0x24, 0x26, 0xc9, 0x2c, 0x77, 0x23, 0xfd, 0x0c, 0xa3, 0x2d, 0xaf, 0x3b, 0x11, 0x05,
	0x31, 0x49, 0xe6, 0x59, 0x76, 0x79, 0x7f, 0xde, 0x03, 0xde, 0x06, 0x6f, 0xc8, 0x5d, 0x0b, 0xd7,
	0x83, 0xd3, 0xfc, 0xa3, 0xf2, 0xd3, 0x79, 0xe5, 0xab, 0x4b, 0x2a, 0x97, 0x2e, 0x78, 0xd2, 0x78,
	0xff, 0x3b, 0x80, 0xd9, 0x41, 0xa0, 0x0c, 0x6e, 0xbf, 0xd7, 0x9a, 0xe3, 0x4a, 0x75, 0x8d, 0x30,
	0x1c, 0xb5, 0x59, 0x6d, 0x79, 0xed, 0xcb, 0x49, 0x7e, 0xe3, 0xa5, 0xc5, 0x5f, 0x65, 0xc9, 0x6b,
	0x9a, 0xc1, 0xd3, 0xde, 0x5f, 0x09, 0xa5, 0x1b, 0xa9, 0x0e, 0x89, 0xc0, 0x27, 0x7a, 0xd8, 0x87,
	0xa3, 0xe6, 0x32, 0x2f, 0xe1, 0x46, 0xaa, 0x61, 0x43, 0x18, 0x93, 0x24, 0xcc, 0xaf, 0xa5, 0x3a,
	0xe7, 0x33, 0xb8, 0x75, 0xde, 0x21, 0xfd, 0xca, 0xbb, 0x1d, 0x66, 0xc0, 0x7e, 0x0e, 0x60, 0xd1,
	0x48, 0xb5, 0xf6, 0xb6, 0x91, 0xbf, 0xb3, 0x59, 0xbf, 0x71, 0xf2, 0x33, 0x98, 0x16, 0x5a, 0xd7,
	0x5e, 0x1c, 0xc7, 0x24, 0x99, 0xe6, 0x13, 0xf7, 0xef, 0x24, 0x0a, 0x57, 0x9d, 0x92, 0x18, 0x4d,
	0x7c, 0xc6, 0xcf, 0x6e, 0x57, 0x09, 0x5b, 0x46, 0xd3, 0x7e, 0xe7, 0xe6, 0x87, 0xc9, 0xb7, 0x91,
	0x7f, 0x0c, 0xc5, 0xd8, 0x7f, 0x5e, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x74, 0xc8, 0xbd, 0x36,
	0x3f, 0x03, 0x00, 0x00,
}
