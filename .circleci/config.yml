version: 2.1

executors:
  go-priv:
    working_directory: /go/src/github.com/hashicorp/nomad
    environment:
      GOPATH: /go
      GOMAXPROCS: 1
    machine:
      image: circleci/classic:201808-01
  go:
    working_directory: /go/src/github.com/hashicorp/nomad
    environment:
      GOPATH: /go
    docker:
      - image: golang:1.11
        user: root

commands:
  install-go:
    description: "Installs golang on a CircleCI Machine executor"
    parameters:
      version:
        type: string
        default: "1.11.4"
    steps:
      - run: curl -O https://storage.googleapis.com/golang/go<< parameters.version >>.linux-amd64.tar.gz
      - run: tar -xvf go<< parameters.version >>.linux-amd64.tar.gz
      - run: sudo mv go /usr/bin
      - run: sudo chmod +x /usr/bin/go

jobs:
  build:
    executor: go
    steps:
      - checkout
      - run: make bootstrap
      - run: make check
      - run: make dev
  test:
    executor: go-priv
    steps:
      - checkout
      - install-go
      - run: make bootstrap
      - run: go get -u gotest.tools/gotestsum
      - run: GOMAXPROCS=1 gotestsum -f short-verbose ./...
  build-website:
    # setting the working_directory along with the checkout path allows us to not have
    # to cd into the website/ directory for commands
    working_directory: ~/project/website
    docker:
      - image: hashicorp/middleman-hashicorp:0.3.35
    steps:
      - checkout:
          path: ~/project

      # restores gem cache
      - restore_cache:
          key: static-site-gems-v1-{{ checksum "Gemfile.lock" }}

      - run:
          name: install gems
          command: bundle check || bundle install --path vendor/bundle --retry=3

      # saves gem cache if we have changed the Gemfile
      - save_cache:
          key: static-site-gems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/project/website/vendor/bundle

      - run:
          name: middleman build
          command: bundle exec middleman build

      - run:
          name: website deploy
          command: ./scripts/deploy.sh

workflows:
  version: 2
  dev:
    jobs:
      - build
      - test
  website:
    jobs:
      - build-website:
          context: static-sites
          filters:
            branches:
              only: stable-website
